{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation Sample Template EC2_Instance_With_Ephemeral_Drives: Example to show how to attach ephemeral drives using EC2 block device mappings. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters": {
        "AvailabilityZone": {
            "Description": "Server Availability Zone",
            "Type": "AWS::EC2::AvailabilityZone::Name",
            "ConstraintDescription": "must be the name of an availability zone."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the web server",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "InitialisationScript": {
            "Description": "The shell script to execute",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "999"
        },
        "GameServerPassword": {
            "NoEcho": "true",
            "Description": "Password for the Game Server",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "41"
        },
        "SteamGameKey": {
            "NoEcho": "true",
            "Description": "The key for the steam game.",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "999"
        },
        "HDDSize": {
            "Description": "Size of the Harddrive",
            "Type": "Number",
            "MinValue": 8,
            "MaxValue": 40
        },
        "InstanceType": {
            "Description": "WebServer EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t1.micro",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "SSHLocation": {
            "Description": "Lockdown SSH access to the bastion host (default can be accessed from anywhere)",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
        }
    },
    "Mappings": {},
    "Resources": {
        "EC2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "ImageId": "ami-28cff44b",
                "SecurityGroups": [{
                    "Ref": "EC2SecurityGroup"
                }],
                "BlockDeviceMappings": [{
                    "DeviceName": "/dev/sdc",
                    "VirtualName": "ephemeral0"
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": ["", [
                            "#!/bin/bash -xe\n",
                            "curl ", { "Ref": "InitialisationScript" }, " -o /tmp/install.sh\n",
                            "chmod 777 /tmp/install.sh\n",
                            "export GAME_SERVER_PASSWORD=", { "Ref": "GameServerPassword" }, "\n",
                            "export STEAM_GAME_KEY=", { "Ref": "SteamGameKey" }, "\n",
                            "/tmp/install.sh\n"
                        ]]
                    }
                }
            }
        },
        "EC2SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SSH access",
                "SecurityGroupIngress": [{
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1200",
                        "ToPort": "1200",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "27000",
                        "ToPort": "27015",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "27000",
                        "ToPort": "27015",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "Instance": {
            "Value": {
                "Fn::GetAtt": [
                    "EC2Instance",
                    "PublicDnsName"
                ]
            },
            "Description": "DNS Name of the newly created EC2 instance"
        }
    }
}